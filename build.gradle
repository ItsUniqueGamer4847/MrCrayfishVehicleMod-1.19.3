import groovy.json.JsonOutput
import groovy.json.JsonSlurper

plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

apply plugin: 'maven-publish'

version = "0.45.3-1.18.2"
group = "com.mrcrayfish"
archivesBaseName = "vehicle-mod"

sourceSets.main.resources { srcDir 'src/generated/resources' }

minecraft {
    mappings channel: "official", version: "1.18.2"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                vehicle {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                vehicle {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'vehicle', '--all', '--output', file('src/generated/resources/')
            mods {
                vehicle {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        url = "https://www.cursemaven.com"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.54'

    implementation fg.deobf('curse.maven:framework-549225:3723144')
    implementation fg.deobf('curse.maven:controllable-317269:3707285')
    implementation fg.deobf('curse.maven:configured-457570:3721946')
    implementation fg.deobf('curse.maven:catalogue-459701:3803098')
}

processResources {
    doLast {
        fileTree(dir: outputs.files.asPath, include: "**/*.json").each {
            File file -> file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
        }
    }
}

jar {
    manifest {
        attributes([
            "Specification-Title": "Vehicle Mod",
            "Specification-Vendor": "MrCrayfish",
            "Specification-Version": "1",
            "Implementation-Title": "Vehicle Mod",
            "Implementation-Version": project.version,
            "Implementation-Vendor" : "MrCrayfish",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///X:/localmaven/mcmods"
        }
    }
}

// Workaround as per https://youtrack.jetbrains.com/issue/IDEA-197469
sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
        }
        resources {
            srcDirs = ["src/main/java", "src/main/resources", "src/generated/resources"]
        }
    }

    // at compile time, put resources in same directories as classes
    main.output.resourcesDir = main.java.outputDir
}
